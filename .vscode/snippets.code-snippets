{
  "getUserMiddleware": {
    "scope": "typescriptreact",
    "prefix": "getUserMiddleware",
    "body": [
      "async function getUserMiddleware({ ctx }) {",
      "  if (ctx.session?.userId) {",
      "    ctx.user = await getDb().user.findUnique({",
      "      where: {",
      "        id: ctx.session.userId,",
      "      },",
      "    });",
      "  }",
      "},",
    ],
  },
  "route": {
    "scope": "typescriptreact",
    "prefix": "route",
    "body": ["route('/$1', )"],
  },
  "userRoutes": {
    "scope": "typescriptreact",
    "prefix": "userRoutes",
    "body": ["prefix('/user', userRoutes),"],
  },
  "prefix": {
    "scope": "typescriptreact",
    "prefix": "prefix",
    "body": ["prefix('/$1',),"],
  },
  "layout": {
    "scope": "typescriptreact",
    "prefix": "layout",
    "body": ["layout($1, []),"],
  },
  "initRealtimeClient": {
    "scope": "typescriptreact",
    "prefix": "initRealtimeClient",
    "body": [
      "import { initRealtimeClient } from 'rwsdk/realtime/client';",
      "import { initClientNavigation } from 'rwsdk/client';",
      "",
      "const { handleResponse } = initClientNavigation();",
      "initRealtimeClient({",
      "  handleResponse,",
      "  key: window.location.pathname,",
      "});",
    ],
  },
  "realtimeRoute": {
    "scope": "typescriptreact",
    "prefix": "realtimeRoute",
    "body": ["realtimeRoute(env => {", "  return env.REALTIME_DURABLE_OBJECT;", "}),"],
  },
  "returnJsx": {
    "scope": "typescriptreact",
    "prefix": "returnJsx",
    "body": ["  index(() => {", "    return <h1>Hello World!</h1>;", "  }),"],
  },
  "simpleTodos": {
    "scope": "typescriptreact",
    "prefix": "simpleTodos",
    "body": ["route('/todos/simple', SimpleTodosPage)"],
  },
  "regularDocument": {
    "scope": "typescriptreact",
    "prefix": "regularDocument",
    "body": [
      "render(Document, [",
      "  layout(AppLayout, [",
      "    index(HomePage),",
      "    prefix('/user', userRoutes),",
      "    route('/todos', FancyTodosPage),",
      "    route('/realtime', RealtimePage),",
      "  ]),",
      "]),",
    ],
  },
  "viewTransition": {
    "scope": "typescriptreact",
    "prefix": "viewTransition",
    "body": ["<ViewTransition exit=\"slide-out\" enter=\"slide-out\" default=\"none\">", "$1", "</ViewTransition>"],
  },
  "todoStats": {
    "scope": "typescriptreact",
    "prefix": "todoStats",
    "body": [
      "{ctx.user?.id && (",
      "  <Suspense fallback={<TodoStatsSkeleton />}>",
      "    <TodoStats />",
      "  </Suspense>",
      ")}",
    ],
  },
}
